/**
 * UML Editor - ICP Project 2022
 * @file actorelement.h
 * @brief Header file for ActorElement Class for sequence diagram
 * @author Ondrej Kováč (xkovac57)
 * @author Martin Talajka (xtalaj00)
 */

#ifndef ACTORELEMENT_H
#define ACTORELEMENT_H

#include "objectelement.h"

#include <QGraphicsLineItem>
#include <QWidget>


namespace Ui {
class ActorElement;
}


/** 
*   Actor Element Class.
*   Class for the Actor Element of sequence diagram.
*/
class ActorElement : public QWidget
{
    Q_OBJECT

public:
    /**
    *Consturctor for Actor Element.
    * @param parent Pointer to the parent Widget.
    */
    explicit ActorElement(QWidget *parent = nullptr);
    /**
    *Destructor for Actor Element.
    */
    ~ActorElement();
    /**
    *Create Life Line for the actor.
    *This function creates a vertical dashed line located bellow the Actor Element, together with the first Message Anchor.
    *@param actorPtr Pointer to the Actor Element.
    *@return Pointer to the QGraphicsLineItem of the life line. 
    */
    QGraphicsLineItem * createLifeLine(ActorElement *actorPtr);

    /**
    *Dictionary of Message Anchors.
    *A dictionary of Message Anchors belonging to this Actor Element. The dictionary uses pointers to QGraphicsProxyWidget as keys.
    */
    QMap<QGraphicsProxyWidget*, MessageAnchor*> anchors;

    /**
    *Vector of Proxy Widgets of anchors.
    *This Vector holds keys to the dictionary of anchors. It is used to order the anchors as they are created one by one.
    */
    QVector<QGraphicsProxyWidget *> proxyList;

    /**
    *Pointer to ui elements of Actor Element.
    */
    Ui::ActorElement *ui;
    /**
    *Name of the actor.
    *Name of the actor displayed in the Line Edit above the figure in sequence diagram.
    */
    QString name = "";


private:
    /**
    * Offset of Mouse.
    * Offset of mouse related to the Actor Element. This prevents the object from "snapping" to mouse position when trying to move it.
    */
    QPoint offset;
    /**
    * Pointer to a Life Line.
    * Pointer to the Life Line of an Actor Element.
    */
    QGraphicsLineItem * lifeLine = nullptr;



private slots:

    /**
    * Increase the length of a life line.
    * This slot is bound to a signal emitted from a pressed "+" Button located on the Actor Element.
    * It makes the life line longer and attaches a new Message anchor to the end.
    */
    void increaseLifeLine();
    /**
    * Decrease the length of a life line.
    * This slot is bound to a signal emitted from a pressed "-" Button located on the Actor Element.
    * It makes the life line shorter and detaches the last Message Anchor from the line.
    */
    void decreaseLifeLine();
    /**
    * Slot for deletion of the Actor Element;
    * This slot is bound to a signal emitted from a pressed "Del" Button located on the Actor Element.
    * It calls the deconstructor for the Actor Element.
    */
    void deleteActor();

    /**
    * Slot for editation of Actor Element's name.
    * This slot is called every time the name of the Actor Element is changed.
    * @param arg1 New Name
    */
    void on_lineEdit_textChanged(const QString &arg1);

protected:
    /**
    * Redefinition of mousePressEvent for Actor Element.
    * Used to set the mouse offset.
    * @param event the Mouse Event generated by the mouse press
    */
    virtual void mousePressEvent(QMouseEvent *event);
    /**
    * Redefinition of mouseMoveEvent for Actor Element.
    * Used to move the object and it's children around the scene.
    * @param event the Mouse Event generated by the mouse movement
    */
    virtual void mouseMoveEvent(QMouseEvent *event);
};

#endif // ACTORELEMENT_H
